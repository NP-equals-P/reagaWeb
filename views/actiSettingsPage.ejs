<!DOCTYPE html>
<html lang="en">
    <script>

        var components;

        async function onLoadFunction() {
            components = await getComponents();

            pageStart()
        }

        async function getComponents() {
            const url = "http://localhost:3000/components?reacId=" + document.getElementById("reacId").value;
            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error(`Response status: ${response.status}`);
                }

                const json = await response.json();
                return json;
            } catch (error) {
                console.error(error.message);
            }
        }

        async function pageStart() {
            var actionType = document.getElementById("actionType").value;
            
            if (actionType === "sensor") {
                document.getElementById("sensorRadio").checked = true
            } else {
                document.getElementById("actuatorRadio").checked = true
            }

            await changeType();
            await changeModel();
            await changeFunction();
        }

        async function changeType() {
            var componentSelect = document.getElementById("componentSelect");
            var dataComponent = document.getElementById("currentComponent").value;
            var str = "";
            var aux;

            if (document.getElementById("sensorRadio").checked) {
                for (let i=0; i<components.sensors.length; i+=1) {

                    if (dataComponent === components.sensors[i]._id.toString()) {
                        aux = "selected";
                    } else {
                        aux = "";
                    }

                    str += "<option value=" + components.sensors[i]._id + " " + aux + ">" + components.sensors[i].name + "</option>"
                    componentSelect.innerHTML = str;
                }
            } else {
                for (let i=0; i<components.actuators.length; i+=1) {

                    if (dataComponent === components.actuators[i]._id.toString()) {
                        aux = "selected";
                    } else {
                        aux = "";
                    }

                    str += "<option value=" + components.actuators[i]._id + " " + aux + ">" + components.actuators[i].name + "</option>"
                    componentSelect.innerHTML = str;
                }
            }

            await changeModel();
            await changeFunction();
        }

        async function getModelFunctions() {
            var type;

            if (document.getElementById("sensorRadio").checked) {
                type = "sensor";
            } else {
                type = "actuator";
            }

            const url = "http://localhost:3000/modelFunctions?compId=" + document.getElementById("componentSelect").value + "&type=" + type;
            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error(`Response status: ${response.status}`);
                }

                const json = await response.json();
                return json;
            } catch (error) {
                console.error(error.message);
            }
        }

        async function changeModel() {
            var functions = await getModelFunctions();
            var functionSelect = document.getElementById("functionSelect");
            var dataFunction = document.getElementById("currentFunction").value;
            var str = "";
            var aux;

            for (let i=0; i<functions.length; i+=1) {
                if (dataFunction.toString() && (dataFunction.toString() === functions[i]._id.toString())) {
                    aux = "selected";
                } else {
                    aux = "";
                }

                str += "<option value=" + functions[i]._id + " " + aux + ">" + functions[i].name + "</option>"
                functionSelect.innerHTML = str;
            }

            await changeFunction();
        }

        async function getFunctionHTML() {
            var functionId = document.getElementById("functionSelect").value;

            const url = "http://localhost:3000/functionHTML?funcId=" + document.getElementById("functionSelect").value;
            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error(`Response status: ${response.status}`);
                }

                const json = await response.json();
                return json;
            } catch (error) {
                console.error(error.message);
            }
        }

        async function changeFunction() {
            var funcHTMLStr = await getFunctionHTML();

            document.getElementById("varDiv").innerHTML = funcHTMLStr.html;
        }

    </script>

    <head>
        <link rel="stylesheet" href="/styles/addActPageStyles.css">
        <link rel="icon" href="./pictures/logo.ico" type="image/x-icon">
        <title> Add Action </title>
    </head>

    <body onload="onLoadFunction()">
        <input type="hidden" id="actionType" name="actionType" value=<%= data.type %>>
        <%- include('./partials/nav.ejs', {name: username}) %>
        <div class="div1">
            <% if (mode === "intervalError") { %>
                <br>
                <span class="errorMsg">Error: Conflicting Interval</span>
            <% } %>
            <form action="/createSaveAction" method="post" id="mainForm">
                <button class="backButt" name="type" value="saveBack">Back</button>

                <label for="" class="nameLabel">Name</label>
                <input type="text" name="newActiName" id="newActiName" class="nameInput" value="<%= data.name %>">

                <label for="" class="sensorLabel">Sensor</label>
                <input type="radio" name="group" id="sensorRadio" value="sensor" class="sensorRadio" onclick="changeType()">
                <label for="" class="actuatorLabel">Actuator</label>
                <input type="radio" name="group" id="actuatorRadio" value="actuator" class="actuatorRadio" onclick="changeType()">

                <label for="" class="componentLabel">Chosen component:</label>

                <select name="newComponent" id="componentSelect" class="componentSelect" onchange="changeModel()"></select>

                <label for="" class="functionLabel">Function</label>
                <select name="newFunction" id="functionSelect" class="functionSelect" onchange="changeFunction()"></select>

                <label for="" class="startLabel">Start</label>
                <input type="number" name="newStart" id="" class="startInput" value="<%=data.start%>">

                <label for="" class="durationLabel">Duration</label>
                <input type="number" name="newDuration" id="" class="durationInput" value="<%=data.duration%>">

                <input type="hidden" id="currentComponent" value=<%= data.component %>>
                <input type="hidden" id="currentFunction" value=<%= data.function %>>

                <input type="hidden" id="actiId" name="actiId" value=<%= data._id %>>
                <input type="hidden" id="routId" name="routId" value=<%= routId %>>
                <input type="hidden" id="evntId" name="evntId" value=<%= evntId %>>
                <input type="hidden" id="reacId" name="reacId" value=<%= reacId %>>
                <input type="hidden" id="_id" name="_id" value=<%= _id %>>

                <% if (data.isCreation) { %>
                    <button class="confirmButt" name="type" id="type" value="create">Create Action</button>
                <% } %>

                <div class="div2" id="varDiv">
                </div>
            </form>
            

            <div><input type="hidden" id="reacId" name="AAA" value="AAAAAAA"></div>

            <% if (data.isCreation) { %>
                <form action="/dicardActionEdit" method="post">
                    <button class="discardButt">Discard Edit</button>
                    <input type="hidden" id="actiId" name="actiId" value=<%= data._id %>>
                    <input type="hidden" id="routId" name="routId" value=<%= routId %>>
                    <input type="hidden" id="evntId" name="evntId" value=<%= evntId %>>
                    <input type="hidden" id="reacId" name="reacId" value=<%= reacId %>>
                    <input type="hidden" id="_id" name="_id" value=<%= _id %>>
                </form>
            <% } else { %>
                <form action="/deleteAction" method="post">
                    <button class="deleteButt">Delete Action</button>
                    <input type="hidden" id="actiId" name="actiId" value=<%= data._id %>>
                    <input type="hidden" id="routId" name="routId" value=<%= routId %>>
                    <input type="hidden" id="evntId" name="evntId" value=<%= evntId %>>
                    <input type="hidden" id="reacId" name="reacId" value=<%= reacId %>>
                    <input type="hidden" id="_id" name="_id" value=<%= _id %>>
                </form>
            <% } %>
        </div>
    </body>
</html>